from collections import deque

dx = [-1,1,0,0]
dy = [0,0,-1,1]

def solution(maps):
    def bfs(x, y):
        queue = deque()
        queue.append((x,y))
        while queue:
            x, y = queue.popleft()
            for i in range(4):
                nx = x + dx[i]
                ny = y + dy[i]
                if nx<0 or nx>=len(maps) or ny<0 or ny>=len(maps[0]): 
                    continue
                if maps[nx][ny] == 1:
                    maps[nx][ny] = maps[x][y] + 1
                    queue.append((nx,ny))
    bfs(0,0)
    if maps[len(maps)-1][len(maps[0])-1] <= 1: result = -1
    else : result = maps[len(maps)-1][len(maps[0])-1]
    return result