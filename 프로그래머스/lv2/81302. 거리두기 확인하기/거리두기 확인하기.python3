from collections import deque

#PP이거나 POP인경우를 Return 0로 보내주면 된다. 즉 P만 bfs하면 된다는 뜻이다.

dx = [-1,1,0,0]
dy = [0,0,-1,1]

def bfs(place):
    visited = [[False]*5 for _ in range(5)] #2칸 이동할때 왔다가 다시 올 수 있으므로 방문처리 필요
    queue = deque()
    for i in range(len(place)): #P의 위치를 큐에 추가
        for j in range(len(place[i])):
            if place[i][j] == 'P':
                queue.append((i,j))
    while queue:
        x,y = queue.popleft()
        visited[x][y] = True
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= 5 or ny < 0 or ny >= 5:
                continue
            if place[nx][ny] == 'P':
                return 0
            elif place[nx][ny] =='O':
                for i in range(4):
                    nx2 = nx + dx[i]
                    ny2 = ny + dy[i]
                    if nx2 < 0 or nx2 >= 5 or ny2 < 0 or ny2 >= 5 or visited[nx2][ny2] == True:
                        continue
                    if place[nx2][ny2] == 'P':
                        return 0
    return 1    
        
def solution(places):
    result = []
    for i in range(5):
        result.append(bfs(places[i]))
    return result